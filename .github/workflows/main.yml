name: Main pipeline

env:
  PNPM_VERSION: '8'
  NODE_VERSION: '20'

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    strategy:
      matrix:
        app: [front-app, back-app]
    name: Lint ${{ matrix.app }}

    runs-on: ubuntu-24.04

    defaults:
      run:
        working-directory: ${{ matrix.app }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: './${{ matrix.app }}/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install

      - name: Lint app
        run: pnpm lint

  build-front-app:
    name: Build front-app
    # needs: lint

    runs-on: ubuntu-24.04

    defaults:
      run:
        working-directory: front-app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: './front-app/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install

      - name: Build app
        run: pnpm build

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: front-app-build-${{ github.sha }}
          path: front-app/dist

  build-back-app:
    name: Build back-app
    # needs: lint

    runs-on: ubuntu-24.04

    permissions:
      contents: read
      pages: write
      id-token: write

    defaults:
      run:
        working-directory: back-app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: onorahubleur/ci-cd-discover

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: back-app
          file: ./back-app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: onorahubleur/ci-cd-discover
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

        