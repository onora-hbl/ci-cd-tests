name: Main pipeline

concurrency:
  group: main
  cancel-in-progress: true

env:
  PNPM_VERSION: '8'
  NODE_VERSION: '20'

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  filter:
    name: Filter changed paths
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Filter changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            front-app:
              - 'front-app/**'
            back-app:
              - 'back-app/**'

    outputs:
      front-app: ${{ steps.filter.outputs.front-app }}
      back-app: ${{ steps.filter.outputs.back-app }}

  lint-front-app:
    name: Lint front-app
    needs: filter
    if: ${{ needs.filter.outputs.front-app == 'true' }}

    runs-on: ubuntu-24.04

    defaults:
      run:
        working-directory: front-app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: './front-app/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install

      - name: Lint app
        run: pnpm lint

  lint-back-app:
    name: Lint back-app
    needs: filter
    if: ${{ needs.filter.outputs.back-app == 'true' }}

    runs-on: ubuntu-24.04

    defaults:
      run:
        working-directory: back-app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: './back-app/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install

      - name: Lint app
        run: pnpm lint

  build-front-app:
    name: Build front-app
    needs: lint-front-app

    runs-on: ubuntu-24.04

    defaults:
      run:
        working-directory: front-app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: './front-app/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install

      - name: Build app
        run: pnpm build

      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: front-app-build
          path: front-app/dist

  build-back-app:
    name: Build back-app
    needs: lint-back-app

    runs-on: ubuntu-24.04

    defaults:
      run:
        working-directory: back-app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: onorahubleur/ci-cd-discover

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: back-app
          file: ./back-app/Dockerfile
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          # TODO: change with a semantic versioning
          tags: |
            onorahubleur/ci-cd-discover:back-app-latest
            onorahubleur/ci-cd-discover:back-app-${{ github.sha }}
